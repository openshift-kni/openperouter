apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: l2vnis.openpe.openperouter.github.io
spec:
  group: openpe.openperouter.github.io
  names:
    kind: L2VNI
    listKind: L2VNIList
    plural: l2vnis
    singular: l2vni
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          L2VNI represents a VXLan VNI to receive EVPN type 2 routes
          from.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: L2VNISpec defines the desired state of VNI.
            properties:
              hostmaster:
                description: |-
                  HostMaster is the interface on the host the veth should be enslaved to.
                  If not set, the host veth will not be enslaved to any interface and it must be
                  enslaved manually (or by some other means). This is useful if another controller
                  is leveraging the host interface for the VNI.
                properties:
                  autocreate:
                    default: false
                    description: |-
                      If true, the interface will be created automatically if not present.
                      The name of the bridge is of the form br-hs-<VNI>.
                    type: boolean
                  name:
                    description: Name of the host interface. Must match VRF name validation
                      if set.
                    maxLength: 15
                    pattern: ^[a-zA-Z][a-zA-Z0-9_-]*$
                    type: string
                  type:
                    description: Type of the host interface. Currently only "bridge"
                      is supported.
                    enum:
                    - bridge
                    type: string
                type: object
              l2gatewayip:
                description: |-
                  L2GatewayIP is the IP address to be used for the L2 gateway. When this is set, the
                  bridge the veths are enslaved to will be configured with this IP address, effectively
                  acting as a distributed gateway for the VNI.
                type: string
              vni:
                description: VNI is the VXLan VNI to be used
                format: int32
                maximum: 4294967295
                minimum: 0
                type: integer
              vrf:
                description: |-
                  VRF is the name of the linux VRF to be used inside the PERouter namespace.
                  The field is optional, if not set it the name of the VNI instance will be used.
                maxLength: 15
                pattern: ^[a-zA-Z][a-zA-Z0-9_-]*$
                type: string
              vxlanport:
                default: 4789
                description: VXLanPort is the port to be used for VXLan encapsulation.
                format: int32
                type: integer
            type: object
          status:
            description: VNIStatus defines the observed state of VNI.
            type: object
        required:
        - metadata
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
