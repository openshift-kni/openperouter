apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "openperouter.labels" . | nindent 4 }}
    component: nodemarker
    {{- range $key, $value := .Values.openperouter.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  name: nodemarker
  namespace: {{ .Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      {{- include "openperouter.selectorLabels" . | nindent 6 }}
      component: nodemarker
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: nodemarker
      labels:
        {{- include "openperouter.selectorLabels" . | nindent 8 }}
        component: nodemarker
        app: nodemarker
        {{- range $key, $value := .Values.openperouter.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- if .Values.openperouter.runtimeClassName }}
      runtimeClassName: {{ .Values.openperouter.runtimeClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "openperouter.controller.serviceAccountName" . }}
      containers:
      - args:
        {{- with .Values.openperouter.logLevel }}
        - --loglevel={{ . }}
        {{- end }}
        - "--namespace=$(NAMESPACE)"
        {{- if not .Values.webhook.enabled }}
        - "--webhookmode=disabled"
        - "--disable-cert-rotation=true"
        {{- end }}
        command:
        - /nodemarker
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.webhook.enabled }}
        ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: webhook-server
            scheme: HTTPS
        livenessProbe:
          httpGet:
            path: /healthz
            port: webhook-server
            scheme: HTTPS
        volumeMounts:
        - name: cert
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        {{- end }}
        image: {{ .Values.openperouter.image.repository }}:{{ .Values.openperouter.image.tag | default .Chart.AppVersion }}
        {{- if .Values.openperouter.image.pullPolicy }}
        imagePullPolicy: {{ .Values.openperouter.image.pullPolicy }}
        {{- end }}
        name: nodemarker
        {{- with .Values.openperouter.nodemarker.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- if .Values.webhook.enabled }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: openpe-webhook-server-cert
      {{- end }}

